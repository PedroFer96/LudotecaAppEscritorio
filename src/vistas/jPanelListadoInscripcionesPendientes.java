/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vistas;

import java.awt.Color;
import java.awt.Font;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import utils.Mensajes;
import utils.SocketHandler;

/**
 *
 * @author pedro
 */
public class jPanelListadoInscripcionesPendientes extends javax.swing.JPanel {

    PanelPropietario parent;
    
    int idLudoteca;
    int fila = -1;
    ArrayList<String> listaIdCLientes = new ArrayList<>();
    
    
    public jPanelListadoInscripcionesPendientes() {
    
    }

    jPanelListadoInscripcionesPendientes(PanelPropietario parent, int id) {
        initComponents();
        this.parent= parent;
        this.idLudoteca = id;
        
        
        jTableInscripciones.setDefaultEditor(Object.class, null);
        jTableInscripciones.getTableHeader().setFont(new Font("Tahoma",1,18));
        jTableInscripciones.getTableHeader().setForeground(Color.BLACK);
        jTableInscripciones.getTableHeader().setBackground(Color.GREEN); 
        
        
        ObtenerInscripciones();
        
    }
    
    public void ObtenerInscripciones() {
        //jTableInscripciones  borrar la informacion de la tabla
        listaIdCLientes.clear();
        
        try {
        
            SocketHandler.getOut().println(Mensajes.PETICION_MOSTRAR_PREINSCRIPCION_POR_LUDOTECA + "--" + idLudoteca);
            
            
            String received = SocketHandler.getIn().readLine();
            String [] args = received.split("--");
            
            int nPIncrepciones = Integer.parseInt(args[1]);
            
            DefaultTableModel model = (DefaultTableModel) jTableInscripciones.getModel();
            model.setRowCount(0);
            
            
            for(int i = 0 ; i< nPIncrepciones; i++){
            
                received = SocketHandler.getIn().readLine();
                
                args = received.split("--");
                
                listaIdCLientes.add(args[3]);
                
                String nombreC = args[4] + " " + args[5];                
                
                String idTutor = args[8];
                String tutor;                
                if( idTutor.equals("null")){
                    tutor = "Mayor de edad";
                }else {
                    tutor = args [9] + " - " + args[10];
                }
                
                Object [] row = { args[1], "Sin validar", nombreC, args[6], args[7], tutor };
                model.addRow(row);
            }
        } catch (IOException ex) {
            Logger.getLogger(jPanelListadoInscripcionesPendientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableInscripciones = new javax.swing.JTable();
        jBValidar = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Inscripciones Pendientes");

        jTableInscripciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Estado", "Nombre", "Dni", "Tel√©fono", "Tutor"
            }
        ));
        jTableInscripciones.getTableHeader().setReorderingAllowed(false);
        jTableInscripciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableInscripcionesMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableInscripciones);

        jBValidar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jBValidar.setText("Seleccionar");
        jBValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBValidarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 830, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(277, 277, 277)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(281, 281, 281)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(724, 724, 724)
                        .addComponent(jBValidar, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jBValidar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBValidarActionPerformed

        
        if( fila != -1 ){
            VerificarInscripcion vi = new VerificarInscripcion(parent, this, listaIdCLientes.get(fila));
            vi.setVisible(true);
            parent.setEnabled(false);
        }else {
            JOptionPane.showMessageDialog(this, "Seleccione alguna inscripcion");
        }
        
        
    }//GEN-LAST:event_jBValidarActionPerformed

    private void jTableInscripcionesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableInscripcionesMousePressed
        this.fila = this.jTableInscripciones.getSelectedRow();
    }//GEN-LAST:event_jTableInscripcionesMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBValidar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableInscripciones;
    // End of variables declaration//GEN-END:variables


}
